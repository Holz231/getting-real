#------------------------------------------------SAMPLE/SNARE--------------------------------#


#---------------------------EFFELKTE---------------------------#
with_fx :lpf do |lps|
  with_fx :reverb do
    with_fx :slicer, phase: 0.125, pulse_width: 0.5 do |slicec|
      with_fx :bitcrusher, bits: 0.125 do |bit|
        with_fx :echo, phase: 0.25 do |eko|
          with_fx :krush do |kushs|
            
            #-----------------------------------------EFFEKT CONTROL MODULE (LOGIC)--------------------------------#
            
            live_loop :efx_control1 do
              
              if tick(:firsttime) == 0 then
                
                set :slicec, slicec
                set :bit, bit
                set :eko,eko
                set :lps, lps
                set :kushs, kushs
              end
              
              sleep 100
              
            end
            
            #-----------------------------------MELODIE-----------------------#  Entweder IF SPREAD ODER IF ONE_IN , so wie bei play
            
            ampi = (ring 1, 1)  #spread???
            
            live_loop :bass3, sync: :metro, delay: 10 do
              
              use_bpm 120
              
              use_random_seed get(:randseeed)
              
              #4.times do
              
              #tick #-------------------------------------------------needs tick
              #a = (ring  0,      0 ,   0,       0 ).look #------------------ selected
              #b = (ring  0.5,    0.5,  0.5,       0.5 ).look
              
              # a = (ring  0.1, 0.4, 0.6).choose #---random selected# !!use num_slices and/or onset!!!
              #b = a + 0.25
              
              with_swing 0.125, pulse: 1 do
                
                sample "C:/Users/marce/Desktop/Smpale full/FULL2.wav" , num_slices: 3, slice: 1 if spread(10, 16).tick(:tick3) #, onset: pick, amp: ampi.shuffle.choose, rate: 1      #start: 0, finish: 1, num_slices: 6, slice: (ring 1,1, 2, 2,3, 3,5,6).shuffle.choose,
                sample "C:/Users/marce/Desktop/Smpale full/FULL2.wav" , num_slices: 3, slice: 2 if spread(6, 16).tick(:tick3)
                sample "C:/Users/marce/Desktop/Smpale full/FULL2.wav" , num_slices: 3, slice: 3 if spread(16, 16).tick(:tick3)
                #----- SAMPLE MIT ONSET / IF ONE_IN / IF SPREAD ODER VOLLSTÃ„NDIG BZW. CUTTET
                
              end
              
              sleep sample_duration "C:/Users/marce/Desktop/Smpale full/FULL2.wav", num_slices: 3, slice: 1             #  (ring 0.5, 0.25, 0.25).choose            #sample_duration "C:/Users/marce/Desktop/sonic pi/1.wav", start: 0, finish: 1, num_slices: 10, slice: 1 # - oder - start:a ,finish b - oder -, onset: pick - sleep 0.25
            end
          end
        end
      end
    end
  end
end
#--------------------------------------------EFFECT CONTROL------------------------#

live_loop :slice9, sync: :metro do
  
  slice = get[:slicec]
  sleep 2
  control slice, phase: 0.125, pulse_width: 0.5, mix: 1, phase_slide: 1, smooth: 0.06, pulse_width_slide: 2
  sleep 1
  control slice, phase: 0.125, pulse_width: 0.1, mix: 1, phase_slide: 1
  sleep 1
  control slice, phase: 0.125, pulse_width: 0.1, mix: 1
  sleep 2
  
end

live_loop :bitti, sync: :metro do
  
  bits = get[:bit]
  sleep 2
  control bits, bits: 10, bits_slide: 2, sample_rate: 1000, sample_rate_slide: 2
  sleep 2
  control bits, bits: 10, bits_slide: 2, sample_rate: 1000, sample_rate_slide: 2
  sleep 2
  control bits, bits: 10, bits_slide: 2, sample_rate: 1000, sample_rate_slide: 2
  sleep 2
  
end

live_loop :eko1, sync: :metro do
  
  ekos = get[:eko]
  sleep 2
  control ekos, phase: 0.125, phase_slide: 2
  sleep 2
  control ekos, phase: 0.125
  sleep 2
  control ekos, phase: 0.125
  sleep 2
  
end

live_loop :lps3, sync: :metro do
  
  lpss = get[:lps]
  sleep 0.5
  control lpss, cutoff: 80, cutoff_slide: 1
  sleep 1
  control lpss, cutoff: 120
  sleep 2
  control lpss, cutoff: 80
  sleep 0.5
  
end

live_loop :kushs12, sync: :metro do
  
  ksuhss = get[:kushs]
  sleep 0.5
  control ksuhss, res: 0.9
  sleep 1
  control ksuhss, res: 0.9
  sleep 2
  control ksuhss, res: 0.9
  sleep 0.5
  
end


