
#---------------------------EFFELKTE---------------------------#


with_fx :slicer, phase: 0.125, pulse_width: 0.5, phase_slide: 0.5, mix_slide: 0.5 do |sliceb|
  
  #-----------------------------------------EFFEKT CONTROL MODULE (LOGIC)--------------------------------#
  
  live_loop :efx_control1, sync: :metro do
    
    if tick(:firsttime) == 0 then
      
      set :sliceb, sliceb
      
    end
    
    sleep 100
    
  end
  
  #----------------------------------MELODIE-----------------------#
  
  
  ampi = (ring 1, 1)  #spread???
  
  # use_synth :tb303
  
  live_loop :bass1, sync: :metro,  delay: 10 do
    
    use_bpm 80
    
    use_random_seed get(:randseeed)
    
    8.times do
      
      #with_swing 0.125, pulse: 6, shift: 0  do#(ring 0.2, 0.5 , 4, 8).choose do #rrand(1, 8)
      
      # play (chord :e, :minor).pick(1)
      #play_pattern_timed chord(:E3, :m13), [0.25, 0.5]
      # play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).shuffle
      
      use_synth :chipbass
      play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).take(4).pick(1), 0.5 if one_in(15)
      play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).take(4).pick(1), 0.5 if one_in(15)
      play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).take(4).pick(1), 0.5 if one_in(12)
      play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).take(4).pick(1), 0.5 if one_in(6)
      play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).take(4).pick(1).shuffle, 0.25 if one_in(4)
      play_pattern_timed scale(:b3, :ahirbhairav, num_octaves: 1).take(4).pick(1).shuffle, 0.25 if one_in(2)
      
      sleep 0.25
    end
  end
end

#--------------------------------------------EFFECT CONTROL------------------------#

live_loop :slice11, sync: :metro do
  # sync :l√∂l
  
  slice = get[:sliceb]
  sleep 2
  control slice, phase: 0.5, pulse_width: 0.5, mix: 0
  sleep 2
  control slice, phase: 0.25, pulse_width: 0.5, mix: 0
  sleep 2
  control slice, phase: 0.5, pulse_width: 0.5, mix: 0
  sleep 2
  
end
